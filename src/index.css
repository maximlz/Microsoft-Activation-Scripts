/* Добавляем правило для коррекции InputLabel в outlined варианте */
.MuiInputLabel-outlined.MuiInputLabel-shrink {
  transform: translate(14px, -9px) scale(0.75);
}

/* Новое правило для метки в пустом/неактивном состоянии */
.MuiOutlinedInput-root:not(.Mui-focused):not(.Mui-error) .MuiInputLabel-outlined {
  /* Возможно, потребуется подстроить transform, если стандартный -9px не работает */
  /* Попробуем немного поднять метку */
  transform: translate(14px, -7px) scale(0.75);
}

/* Если поле заполнено ИЛИ в фокусе, стандартный shrink должен работать */
.MuiOutlinedInput-root.Mui-focused .MuiInputLabel-outlined,
.MuiOutlinedInput-root:not(.MuiInput-underline):not(:has(input[value=""])) .MuiInputLabel-outlined,
.MuiOutlinedInput-root:not(.MuiInput-underline):not(:has(select[value=""])) .MuiInputLabel-outlined /* Для Select с непустым значением */
{
    transform: translate(14px, -9px) scale(0.75);
}

/* Стили для исправления наложения текста метки на поля Select */
.MuiInputLabel-root {
  background-color: white;
  padding-left: 5px;
  padding-right: 5px;
}

/* Увеличиваем z-index для метки, когда она в фокусе или поле заполнено */
.MuiInputLabel-root.Mui-focused,
.MuiInputLabel-root.MuiFormLabel-filled {
  z-index: 1;
}

/* Стили для компонентов, заменяющие инлайн sx стили */
.container-margin {
  margin-top: 4px;
  margin-bottom: 4px;
}

.alert-margin {
  margin-top: 2px;
}

.paper-padding {
  padding: 2px;
}

@media (min-width: 600px) {
  .paper-padding {
    padding: 3px;
  }
}

@media (min-width: 900px) {
  .paper-padding {
    padding: 4px;
  }
}

.form-margin-top {
  margin-top: 1px;
}

.divider-centered {
  justify-content: center;
}

.button-margin-top {
  margin-top: 3px;
}

.alert-full-width {
  width: 100%;
}

/* Стили для App.tsx компонентов */
.flex-center {
  display: flex;
  justify-content: center;
  margin-top: 5px;
  margin-bottom: 5px;
}

.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
}

.title-centered {
  flex-grow: 1;
  text-align: center;
}

/* Стили для LanguageSwitcher */
.language-switcher-margin {
  margin-left: 2px;
}

.flag-icon {
  font-size: 1.5rem;
}

.flag-icon-menu {
  font-size: 1.2rem;
  margin-right: 8px;
}

.language-menu-paper {
  overflow: visible;
  filter: drop-shadow(0px 2px 8px rgba(0,0,0,0.32));
  margin-top: 1.5px;
}

.language-menu-paper .MuiAvatar-root {
  width: 32px;
  height: 32px;
  margin-left: -0.5px;
  margin-right: 1px;
}

.language-menu-paper::before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  right: 14px;
  width: 10px;
  height: 10px;
  background-color: #fff;
  transform: translateY(-50%) rotate(45deg);
  z-index: 0;
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

.required-star {
    color: red;
}
